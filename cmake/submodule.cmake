macro(SUBMODULE_IMPL type name)
    if(${type} STREQUAL "MAIN")
        add_executable(${name})
        if(MINECRAFT_CLONE_TESTING)
            target_link_libraries(${name} PRIVATE doctest::doctest)
            if(SOURCES)
                target_sources(${name}
                    PRIVATE
                        ${SOURCES})
            endif()
            add_test(NAME Test COMMAND $<TARGET_FILE:${name}>)
        endif()
    elseif(${type} STREQUAL "MODULE")
        add_library(${name} OBJECT ${SOURCES})
        if(MINECRAFT_CLONE_TESTING AND TESTS)
            list(TRANSFORM TESTS PREPEND tests/)
            target_sources(${name}
                PRIVATE
                    ${TESTS})
            set(INCLUDES ${INCLUDES} ${DOCTEST_INCLUDE})
        endif()
        set(INCLUDES ${INCLUDES} ${CMAKE_CURRENT_SOURCE_DIR}/include)
    endif()

    if(DEPS)
        list(TRANSFORM DEPS PREPEND "$<TARGET_OBJECTS:")
        list(TRANSFORM DEPS APPEND ">")
        target_link_libraries(${name} PUBLIC ${DEPS})
    endif()
    if(INCLUDES)
        target_include_directories(${name} PRIVATE ${INCLUDES})
    endif()
endmacro()

macro(MAIN_MODULE name)
    SUBMODULE_IMPL(MAIN ${name})
endmacro()
macro(SUBMODULE name)
    SUBMODULE_IMPL(MODULE ${name})
endmacro()
